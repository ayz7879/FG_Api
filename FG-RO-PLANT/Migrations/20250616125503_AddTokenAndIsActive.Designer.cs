// <auto-generated />
using System;
using FG_RO_PLANT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FG_RO_PLANT.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250616125503_AddTokenAndIsActive")]
    partial class AddTokenAndIsActive
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FG_RO_PLANT.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<decimal?>("AdvancePay")
                        .HasColumnType("numeric");

                    b.Property<int>("CustomerType")
                        .HasColumnType("integer");

                    b.Property<int?>("InitialDepositCapsule")
                        .HasColumnType("integer");

                    b.Property<int?>("InitialDepositJar")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<decimal?>("PricePerCapsule")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("PricePerJar")
                        .HasColumnType("numeric");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FG_RO_PLANT.Models.DailyEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapsuleGiven")
                        .HasColumnType("integer");

                    b.Property<int?>("CapsuleTaken")
                        .HasColumnType("integer");

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("CustomerPay")
                        .HasColumnType("numeric");

                    b.Property<DateOnly?>("DateField")
                        .HasColumnType("date");

                    b.Property<int?>("JarGiven")
                        .HasColumnType("integer");

                    b.Property<int?>("JarTaken")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("DailyEntries");
                });

            modelBuilder.Entity("FG_RO_PLANT.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DailyEntryId")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("DateField")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DailyEntryId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("FG_RO_PLANT.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FG_RO_PLANT.Models.DailyEntry", b =>
                {
                    b.HasOne("FG_RO_PLANT.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("FG_RO_PLANT.Models.History", b =>
                {
                    b.HasOne("FG_RO_PLANT.Models.DailyEntry", "DailyEntry")
                        .WithMany()
                        .HasForeignKey("DailyEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyEntry");
                });
#pragma warning restore 612, 618
        }
    }
}
